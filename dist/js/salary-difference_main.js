let subhead=document.getElementsByClassName("chart-subhead"),headline=document.getElementById("chart-head");if(!headline)for(var i=0;i<subhead.length;i++)subhead[i].style.fontWeight="600";Highcharts.setOptions({lang:{thousandsSep:","}});let chartId=document.getElementById("chart-container");setTimeout(function(){if(chartId)console.log("yesId");else{console.log("noId");let t=document.getElementsByClassName("chart-area");for(var e=0;e<t.length;e++)t[e].style.display="none";document.getElementById("chart-fallback").innerHTML+='<img src="https://fm-static.cnbc.com/awsmedia/chart/2019/10/08/chart-error_wide.1570569331252.png" style="width: 100%;max-width:660px">'}},1500),document.addEventListener("DOMContentLoaded",function(){setTimeout(function(){Highcharts.chart(chartId,{chart:{type:"bar",styledMode:!0,spacingBottom:25,spacingRight:100},title:{text:null},data:{googleSpreadsheetKey:"1MjbFTX_9S8aWOG1ZT7kT5wFS3iy0ODsy9bwBl8WhWK4"},plotOptions:{series:{groupPadding:.1}},legend:{enabled:!1},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},max:3e4,min:-2e4,tickAmount:6},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,formatter:function(){if(this.y<0){return"-$"+(-1*this.y).toLocaleString()}return"$"+this.y.toLocaleString()}},responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-18},tooltip:{enabled:!1}}}]}})},1e3)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsic3ViaGVhZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImhlYWRsaW5lIiwiZ2V0RWxlbWVudEJ5SWQiLCJpIiwibGVuZ3RoIiwic3R5bGUiLCJmb250V2VpZ2h0IiwiSGlnaGNoYXJ0cyIsInNldE9wdGlvbnMiLCJsYW5nIiwidGhvdXNhbmRzU2VwIiwiY2hhcnRJZCIsInNldFRpbWVvdXQiLCJjb25zb2xlIiwibG9nIiwiY2hhcnRBcmVhIiwiZGlzcGxheSIsImlubmVySFRNTCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjaGFydCIsInR5cGUiLCJzdHlsZWRNb2RlIiwic3BhY2luZ0JvdHRvbSIsInNwYWNpbmdSaWdodCIsInRpdGxlIiwidGV4dCIsImRhdGEiLCJnb29nbGVTcHJlYWRzaGVldEtleSIsInBsb3RPcHRpb25zIiwic2VyaWVzIiwiZ3JvdXBQYWRkaW5nIiwibGVnZW5kIiwiZW5hYmxlZCIsInhBeGlzIiwibGFiZWxzIiwid2hpdGVTcGFjZSIsInRpY2tMZW5ndGgiLCJ5QXhpcyIsInVzZUhUTUwiLCJvdmVyZmxvdyIsIm1heCIsIm1pbiIsInRpY2tBbW91bnQiLCJjcmVkaXRzIiwidG9vbHRpcCIsInNoYWRvdyIsInBhZGRpbmciLCJmb3JtYXR0ZXIiLCJ0aGlzIiwieSIsInRvTG9jYWxlU3RyaW5nIiwicmVzcG9uc2l2ZSIsInJ1bGVzIiwiY29uZGl0aW9uIiwibWF4V2lkdGgiLCJjaGFydE9wdGlvbnMiLCJhbGlnbiIsIngiXSwibWFwcGluZ3MiOiJBQVFBLElBQUFBLFFBQUFDLFNBQUFDLHVCQUFBLGlCQUNBQyxTQUFBRixTQUFBRyxlQUFBLGNBQ0EsSUFBQUQsU0FDQSxJQUFBLElBQUFFLEVBQUEsRUFBQUEsRUFBQUwsUUFBQU0sT0FBQUQsSUFDQUwsUUFBQUssR0FBQUUsTUFBQUMsV0FBQSxNQUlBQyxXQUFBQyxXQUFBLENBQ0FDLEtBQUEsQ0FDQUMsYUFBQSxPQUlBLElBQUFDLFFBQUFaLFNBQUFHLGVBQUEsbUJBR0FVLFdBQUEsV0FDQSxHQUFBRCxRQVNBRSxRQUFBQyxJQUFBLGFBVEEsQ0FDQUQsUUFBQUMsSUFBQSxRQUNBLElBQUFDLEVBQUFoQixTQUFBQyx1QkFBQSxjQUNBLElBQUEsSUFBQUcsRUFBQSxFQUFBQSxFQUFBWSxFQUFBWCxPQUFBRCxJQUNBWSxFQUFBWixHQUFBRSxNQUFBVyxRQUFBLE9BR0FqQixTQUFBRyxlQUFBLGtCQUFBZSxXQUFBLDRJQUlBLE1BRUFsQixTQUFBbUIsaUJBQUEsbUJBQUEsV0FHQU4sV0FBQSxXQUVBTCxXQUFBWSxNQUFBUixRQUFBLENBQ0FRLE1BQUEsQ0FDQUMsS0FBQSxNQUNBQyxZQUFBLEVBQ0FDLGNBQUEsR0FDQUMsYUFBQSxLQUVBQyxNQUFBLENBQ0FDLEtBQUEsTUFFQUMsS0FBQSxDQUNBQyxxQkFBQSxnREFHQUMsWUFBQSxDQUNBQyxPQUFBLENBQ0FDLGFBQUEsS0FHQUMsT0FBQSxDQUNBQyxTQUFBLEdBRUFDLE1BQUEsQ0FDQUMsT0FBQSxDQUNBN0IsTUFBQSxDQUNBOEIsV0FBQSxXQUdBQyxXQUFBLEdBRUFDLE1BQUEsQ0FDQWIsT0FBQSxFQUNBVSxPQUFBLENBQ0FJLFNBQUEsRUFDQUMsU0FBQSxTQUVBQyxJQUFBLElBQ0FDLEtBQUEsSUFDQUMsV0FBQSxHQUVBQyxRQUFBLENBQ0FYLFNBQUEsR0FFQVksUUFBQSxDQUNBQyxRQUFBLEVBQ0FDLFFBQUEsR0FDQUMsVUFBQSxXQUNBLEdBQUFDLEtBQUFDLEVBQUEsRUFBQSxDQUVBLE1BQUEsT0FEQSxFQUFBRCxLQUFBLEdBQ0FFLGlCQUVBLE1BQUEsSUFBQUYsS0FBQSxFQUFBRSxtQkFJQUMsV0FBQSxDQUNBQyxNQUFBLENBQUEsQ0FDQUMsVUFBQSxDQUNBQyxTQUFBLEtBRUFDLGFBQUEsQ0FDQXBDLE1BQUEsQ0FDQUksYUFBQSxJQUVBUSxPQUFBLENBQ0F5QixNQUFBLE9BQ0FDLEdBQUEsSUFFQWIsUUFBQSxDQUNBWixTQUFBLFVBTUEiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGFkZHMgc29jaWFsIGNsYXNzIHRvIGdldCBzb2NpYWwgY2hhcnRcbi8vIGxldCBlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNoYXJ0LWFyZWFcIik7XG4vLyBmb3IodmFyIGkgPSAwOyBpIDwgZWxlbWVudC5sZW5ndGg7IGkrKylcbi8vIHtcbi8vICAgICBlbGVtZW50W2ldLmNsYXNzTmFtZSArPSBcIiBzb2NpYWxcIjtcbi8vIH1cblxuLy8gYm9sZHMgdGhlIHN1YmhlYWQgaWYgdGhlcmUgaXMgbm8gaGVhZGxpbmVcbmxldCBzdWJoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNoYXJ0LXN1YmhlYWRcIiksXG4gICAgaGVhZGxpbmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNoYXJ0LWhlYWRcIik7XG4gICAgaWYgKCFoZWFkbGluZSkge1xuICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgc3ViaGVhZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgc3ViaGVhZFtpXS5zdHlsZS5mb250V2VpZ2h0ID0gXCI2MDBcIjtcbiAgICAgICAgfSAgICAgICBcbiAgICAgfVxuXG5IaWdoY2hhcnRzLnNldE9wdGlvbnMoe1xuICAgIGxhbmc6IHtcbiAgICAgIHRob3VzYW5kc1NlcDogJywnXG4gICAgfVxufSk7XG5cbmxldCBjaGFydElkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGFydC1jb250YWluZXJcIik7XG5cbi8vIGNoZWNrcyBmb3IgdGhlIGNoYXJ0IElEIGFuZCBkaXNwbGF5cyBhIGJhY2t1cCBpbWFnZSBpZiB0aGUgYnJvd3NlciBjYW4ndCBmaW5kIGl0XG5zZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgIGlmICghY2hhcnRJZCkge1xuICAgICAgICBjb25zb2xlLmxvZygnbm9JZCcpO1xuICAgICAgICBsZXQgY2hhcnRBcmVhID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImNoYXJ0LWFyZWFcIik7XG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCBjaGFydEFyZWEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNoYXJ0QXJlYVtpXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIH0gXG4gICAgICAgIC8vIGluc2VydCBjaGFydCBzY3JlZW5zaG90IGhlcmVcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGFydC1mYWxsYmFja1wiKS5pbm5lckhUTUwgKz0gJzxpbWcgc3JjPVwiaHR0cHM6Ly9mbS1zdGF0aWMuY25iYy5jb20vYXdzbWVkaWEvY2hhcnQvMjAxOS8xMC8wOC9jaGFydC1lcnJvcl93aWRlLjE1NzA1NjkzMzEyNTIucG5nXCIgc3R5bGU9XCJ3aWR0aDogMTAwJTttYXgtd2lkdGg6NjYwcHhcIj4nO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd5ZXNJZCcpXG4gICAgfVxufSwgMTUwMCk7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmdW5jdGlvbiAoKSB7XG5cblxuICAgIGNvbnN0IG15Q2hhcnQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIEhpZ2hjaGFydHMuY2hhcnQoY2hhcnRJZCwge1xuICAgICAgICAgICAgY2hhcnQ6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnYmFyJyxcbiAgICAgICAgICAgICAgICBzdHlsZWRNb2RlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNwYWNpbmdCb3R0b206IDI1LFxuICAgICAgICAgICAgICAgIHNwYWNpbmdSaWdodDogMTAwLFxuICAgICAgICAgICAgfSwgXG4gICAgICAgICAgICB0aXRsZToge1xuICAgICAgICAgICAgICAgIHRleHQ6IG51bGxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgZ29vZ2xlU3ByZWFkc2hlZXRLZXk6ICcxTWpiRlRYXzlTOGFXT0cxWlQ3a1Q1d0ZTM2l5ME9Ec3k5YndCbDhXaFdLNCdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvLyBmb3IgYmFyIGNoYXJ0cyBvbmx5XG4gICAgICAgICAgICBwbG90T3B0aW9uczoge1xuICAgICAgICAgICAgICAgIHNlcmllczoge1xuICAgICAgICAgICAgICAgICAgICBncm91cFBhZGRpbmc6IDAuMVxuICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbGVnZW5kOiB7XG4gICAgICAgICAgICAgICAgZW5hYmxlZDogZmFsc2VcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB4QXhpczoge1xuICAgICAgICAgICAgICAgIGxhYmVsczoge1xuICAgICAgICAgICAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2hpdGVTcGFjZTogJ25vd3JhcCdcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdGlja0xlbmd0aDogNVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHlBeGlzOiB7XG4gICAgICAgICAgICAgICAgdGl0bGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGxhYmVsczoge1xuICAgICAgICAgICAgICAgICAgICB1c2VIVE1MOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogJ2FsbG93J1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbWF4OiAzMDAwMCxcbiAgICAgICAgICAgICAgICBtaW46IC0yMDAwMCxcbiAgICAgICAgICAgICAgICB0aWNrQW1vdW50OiA2XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3JlZGl0czoge1xuICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdG9vbHRpcDoge1xuICAgICAgICAgICAgICAgIHNoYWRvdzogZmFsc2UsXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTAsXG4gICAgICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnkgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcG9zaXRpdmVWYWx1ZSA9ICh0aGlzLnkpKi0xO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICctJCcgKyAocG9zaXRpdmVWYWx1ZSkudG9Mb2NhbGVTdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnJCcrKHRoaXMueSkudG9Mb2NhbGVTdHJpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZXNwb25zaXZlOiB7XG4gICAgICAgICAgICAgICAgcnVsZXM6IFt7XG4gICAgICAgICAgICAgICAgY29uZGl0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgIG1heFdpZHRoOiA1MDBcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNoYXJ0T3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICBjaGFydDoge1xuICAgICAgICAgICAgICAgICAgICBzcGFjaW5nUmlnaHQ6IDEwXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ246ICdsZWZ0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IC0xOFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0b29sdGlwOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1dXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sIDEwMDApO1xufSk7Il19
